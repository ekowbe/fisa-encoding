
COMM: TYPE;
DEVICE: TYPE;
COMM_TYP: TYPE;
PERSON: TYPE;
PLACE: TYPE;
ATTACK: TYPE;

% Varying constants
attack: ATTACK;
attacker: PERSON;
sender: PERSON;
intended_recipients: PERSON;
device: DEVICE;
communication: COMM;
US: PLACE;

% Immutable constants
wire, radio: COMM_TYP;

acquired: COMM -> BOOLEAN;                                  % was info or communication acquired?
surveillance_device: DEVICE -> BOOLEAN;                     % is Device an electronic, mechanical, or other surveillance device?
communication_type: (COMM, COMM_TYP) -> BOOLEAN;            % iff COMMUNICATION is of this COMM_TYPE, ret true
location: (PERSON, PLACE) -> BOOLEAN;                       % iff person is in place, ret true
targeted: PERSON -> BOOLEAN;                                % is person intentionally targeted?
privacy: PERSON -> BOOLEAN;                                 % did person have reasonable expectation of privacy?
warrant: ATTACK -> BOOLEAN;                                 % would a warrant be required for law enforcement
US_person: PERSON -> BOOLEAN;                               % is Person a US Person
known_and_particular: PERSON -> BOOLEAN;                    % if Person is Particular and Known to be US_Person, ret true
consented: PERSON -> BOOLEAN;                               % did person consent to this attack?
covered: ATTACK -> BOOLEAN;                                 % is this the communication of computer trespassers, permissible under section 2511(2)(i) of title 18
monitoring: DEVICE -> BOOLEAN;                              % was this device installed or used for monitoring to acquire info
intentional: ATTACK -> BOOLEAN;                             % was acquisition intentional?
electronic_surveillance: ATTACK -> BOOLEAN;                 % What we want to know.

ASSERT acquired(communication) <=> TRUE;
ASSERT surveillance_device(device) <=> TRUE;
ASSERT communication_type(communication, wire) <=> TRUE;
ASSERT communication_type(communication, radio) <=> TRUE;
ASSERT US_person(sender) <=> TRUE;
ASSERT known_and_particular(sender) <=> TRUE;
ASSERT location(sender, US) <=> TRUE;
ASSERT location(attacker, US) <=> TRUE;
ASSERT US_person(intended_recipients) <=> TRUE;
ASSERT known_and_particular(intended_recipients) <=> TRUE;
ASSERT location(intended_recipients, US) <=> TRUE;
ASSERT privacy(sender) <=> TRUE;
ASSERT privacy(intended_recipients) <=> TRUE;
ASSERT warrant(attack) <=> TRUE;
ASSERT consented(sender) <=> TRUE;
ASSERT consented(intended_recipients) <=> TRUE;
ASSERT intentional(attack) <=> TRUE;
ASSERT covered(attack) <=> TRUE;
ASSERT monitoring(device) <=> TRUE;

ASSERT ( 
    acquired(communication) AND surveillance_device(device) AND (communication_type(communication, wire) OR communication_type(communication, radio))
) AND (
    ( 
        US_person(sender) AND known_and_particular(sender) AND location(sender, US)
    ) OR (
        US_person(intended_recipients) AND known_and_particular(intended_recipients) AND location(intended_recipients, US) 
    )
) AND (
    (
        privacy(sender) OR privacy(intended_recipients)
    ) AND (
        warrant(attack)
    )
) => electronic_surveillance(attack);


ASSERT ( 
    acquired(communication) AND surveillance_device(device) AND communication_type(communication, wire)
    ) AND (
        location(sender, US) OR location(intended_recipients, US)
    ) AND (
        NOT consented(sender) AND NOT consented(intended_recipients) AND location(attacker, US) AND NOT covered(attack)
    ) => electronic_surveillance(attack);


ASSERT (
        intentional(attack) AND acquired(communication) AND surveillance_device(device) 
    ) AND (
        privacy(sender) OR privacy(intended_recipients)
    ) AND (
        warrant(attack) AND location(sender, US) AND location(intended_recipients, US)
    ) => electronic_surveillance(attack);


ASSERT (
        monitoring(device) AND surveillance_device(device) AND location(attacker, US)
    ) AND (
        NOT (communication_type(communication, wire) OR communication_type(communication, radio))
    ) AND (
        privacy(sender) OR privacy(intended_recipients)
    ) AND (
        warrant(attack)
    )=> electronic_surveillance(attack);

QUERY electronic_surveillance(attack);
